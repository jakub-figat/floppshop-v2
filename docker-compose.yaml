version: "3.8"

services:
  products_db:
    image: postgres:13.4
    env_file: ./backend/products/config/.env
    volumes:
      - products_data:/var/lib/postgresql/data
      - ./backend/products/docker/postgres:/docker-entrypoint-initdb.d
    container_name: floppshop_products_db
    restart: always

  products:
    build:
      context: ./backend/products
      dockerfile: docker/python/Dockerfile
    env_file: ./backend/products/config/.env
    container_name: floppshop_products
    restart: always
    depends_on:
      - products_db
      - rabbitmq
    command: uvicorn main:app --host 0.0.0.0 --port 8002 --reload --workers 4
    stdin_open: true
    tty: true
    ports:
      - 8002:8002
    volumes:
      - ./backend/products/:/app

  users_db:
    image: postgres:13.4
    env_file: ./backend/users/config/.env
    volumes:
      - users_data:/var/lib/postgresql/data
      - ./backend/users/docker/postgres:/docker-entrypoint-initdb.d
    container_name: floppshop_users_db
    restart: always

  users:
    build:
      context: ./backend/users
      dockerfile: docker/python/Dockerfile
    env_file: ./backend/users/config/.env
    container_name: floppshop_users
    restart: always
    depends_on:
      - users_db
      - rabbitmq
    command: uvicorn main:app --host 0.0.0.0 --port 8001 --reload --workers 4
    stdin_open: true
    tty: true
    ports:
      - 8001:8001
    volumes:
      - ./backend/users/:/app

  rabbitmq:
    image: bitnami/rabbitmq:3.9
    ports:
      - 15672:15672
    volumes:
      - rabbitmq_data:/bitnami
    container_name: floppshop_rabbitmq

volumes:
  users_data:
  products_data:
  rabbitmq_data: